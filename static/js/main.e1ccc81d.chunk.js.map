{"version":3,"sources":["components/InstagramPost.js","services/notionService.js","App.js","reportWebVitals.js","index.js"],"names":["InstagramPost","_ref","post","isReel","type","React","createElement","className","style","aspectRatio","position","backgroundColor","overflow","width","imageUrl","src","alt","concat","title","height","objectFit","API_KEY","process","notionServiceInstance","constructor","this","databaseId","baseUrl","headers","Authorization","Content-Type","Notion-Version","Accept","[object Object]","console","log","response","fetch","method","ok","errorText","text","error","status","statusText","body","Error","data","json","message","formatPageData","page","_page$properties$Titl","_page$properties$Titl2","_page$properties$Titl3","_page$properties$Titl4","_page$properties$Imag","_page$properties$Imag2","_page$properties$Imag3","_page$properties$Imag4","_page$properties$Type","_page$properties$Type2","_page$properties$Post","_page$properties$Post2","id","properties","Title","content","Image","files","file","url","Type","select","name","postedDate","date","start","formattedData","results","map","App","posts","setPosts","useState","loading","setLoading","useEffect","async","notionService","getInstagramContent","loadPosts","display","justifyContent","alignItems","minHeight","key","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.e1ccc81d.chunk.js","sourcesContent":["import React from 'react';\n\nconst InstagramPost = ({ post }) => {\n    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç –ø–æ—Å—Ç–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–∏–ø–∞\n    const isReel = post.type === 'reel';\n  \n    return (\n      <div \n        className=\"post-card\"\n        style={{\n          // –î–ª—è Reels –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏–µ 9:16, –¥–ª—è –æ–±—ã—á–Ω—ã—Ö –ø–æ—Å—Ç–æ–≤ - 1:1\n          aspectRatio: isReel ? '9/16' : '1/1',\n          position: 'relative',\n          backgroundColor: '#f1f1f1',\n          overflow: 'hidden',\n          width: '100%'\n        }}\n      >\n        {post.imageUrl ? (\n          <img\n            src={post.imageUrl}\n            alt={`–ü–æ—Å—Ç ${post.title}`}\n            style={{\n              width: '100%',\n              height: '100%',\n              objectFit: 'cover'\n            }}\n          />\n        ) : (\n          <div\n            style={{\n              width: '100%',\n              height: '100%',\n              backgroundColor: '#f1f1f1'\n            }}\n          />\n        )}\n      </div>\n    );\n  };\n  \n  export default InstagramPost;","const API_KEY = process.env.REACT_APP_NOTION_API_KEY;\n\nclass NotionService {\n  constructor() {\n    const devProxy = 'https://cors-anywhere.herokuapp.com/';\n    \n    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π ID –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π\n    // this.databaseId = '16ed2176-428d-805c-909c-ddb1c7332a29';\n    this.databaseId = '16f937ca10d4809591f2d320ddf01689'\n    this.baseUrl = `${devProxy}https://api.notion.com/v1`;\n    this.headers = {\n      'Authorization': `Bearer ${API_KEY}`,\n      'Content-Type': 'application/json',\n      'Notion-Version': '2022-06-28',\n      'Accept': 'application/json'\n    };\n  }\n\n  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è\n  async testConnection() {\n    try {\n      console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...');\n      \n      const response = await fetch(`${this.baseUrl}/users/me`, {\n        method: 'GET',\n        headers: this.headers\n      });\n      \n      if (!response.ok) {\n        const errorText = await response.text();\n        console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {\n          status: response.status,\n          statusText: response.statusText,\n          body: errorText\n        });\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      // –£–±–∏—Ä–∞–µ–º –ø–æ–ø—ã—Ç–∫—É –¥–æ—Å—Ç—É–ø–∞ –∫ results[0]\n      console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API —É—Å–ø–µ—à–Ω–æ:', data);\n      return data;\n    } catch (error) {\n      console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API:', error.message);\n      throw error;\n    }\n  }\n  formatPageData(page) {\n    console.log('–î–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', page);\n    return {\n      id: page.id,\n      title: page.properties.Title?.title?.[0]?.text?.content || '',\n      // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è\n      imageUrl: page.properties.Image?.files?.[0]?.file?.url || '',\n      type: page.properties.Type?.select?.name || '',\n      postedDate: page.properties['Posted Date']?.date?.start || ''\n    };\n  }\n  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã\n  async getInstagramContent() {\n    try {\n      const response = await fetch(`${this.baseUrl}/databases/${this.databaseId}/query`, {\n        method: 'POST',\n        headers: this.headers\n      });\n  \n      if (!response.ok) {\n        throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: ${response.status}`);\n      }\n  \n      const data = await response.json();\n      // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å\n      const formattedData = data.results.map(page => this.formatPageData(page));\n      console.log('–û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', formattedData);\n      return formattedData;\n    } catch (error) {\n      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);\n      throw error;\n    }\n  \n  }\n}\n\n// –°–æ–∑–¥–∞—ë–º –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞\nconst notionServiceInstance = new NotionService();\n\n// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä\nexport default notionServiceInstance;\n\n// const API_KEY = process.env.REACT_APP_NOTION_API_KEY;\n\n// class NotionService {\n//   constructor() {\n//     const devProxy = 'https://cors-anywhere.herokuapp.com/';\n//     this.baseUrl = `${devProxy}https://api.notion.com/v1`;\n//     this.databaseId = '16ed2176-428d-805c-909c-ddb1c7332a29';\n    \n//     this.headers = {\n//       'Authorization': `Bearer ${API_KEY}`,\n//       'Content-Type': 'application/json',\n//       'Notion-Version': '2022-06-28',\n//       'Accept': 'application/json'\n//     };\n//   }\n\n//   async testConnection() {\n//     try {\n//       const response = await fetch(`${this.baseUrl}/users/me`, {\n//         method: 'GET',\n//         headers: this.headers\n//       });\n      \n//       if (!response.ok) {\n//         const errorText = await response.text();\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n      \n//       const data = await response.json();\n//       console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API —É—Å–ø–µ—à–Ω–æ:', data);\n//       return data;\n//     } catch (error) {\n//       console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API:', error);\n//       throw error;\n//     }\n//   }\n\n//   // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å—é–¥–∞ üëá\n//   async getInstagramContent() {\n//     try {\n//       const response = await fetch(`${this.baseUrl}/databases/${this.databaseId}/query`, {\n//         method: 'POST',\n//         headers: this.headers\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       const data = await response.json();\n//       return data.results ? data.results : [];\n//     } catch (error) {\n//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);\n//       return [];\n//     }\n//   }\n\n//   async createEmbedBlock(pageId) {\n//     try {\n//       const response = await fetch(`${this.baseUrl}/blocks/${pageId}/children`, {\n//         method: 'PATCH',\n//         headers: this.headers,\n//         body: JSON.stringify({\n//           children: [\n//             {\n//               object: 'block',\n//               type: 'embed',\n//               embed: {\n//                 url: 'URL_–í–ê–®–ï–ì–û_–ü–†–ò–õ–û–ñ–ï–ù–ò–Ø',\n//               }\n//             }\n//           ]\n//         })\n//       });\n\n//       if (!response.ok) {\n//         throw new Error(`HTTP error! status: ${response.status}`);\n//       }\n\n//       return await response.json();\n//     } catch (error) {\n//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ embed –±–ª–æ–∫–∞:', error);\n//       throw error;\n//     }\n//   }\n// }\n\n// const notionServiceInstance = new NotionService();\n// export default notionServiceInstance;","import React, { useState, useEffect } from 'react';\nimport InstagramPost from './components/InstagramPost';\nimport notionService from './services/notionService';\nimport './App.css';\n\nfunction App() {\n  const [posts, setPosts] = useState([]);\n  const [loading, setLoading] = useState(true);\n    \n  useEffect(() => {\n    const loadPosts = async () => {\n      try {\n        const data = await notionService.getInstagramContent();\n        setPosts(data);\n      } catch (error) {\n        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    loadPosts();\n  }, []);\n\n  // –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É —Å–æ—Å—Ç–æ—è–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏\n  if (loading) {\n    return (\n      <div style={{ \n        display: 'flex', \n        justifyContent: 'center', \n        alignItems: 'center', \n        minHeight: '100vh'\n      }}>\n        –ó–∞–≥—Ä—É–∑–∫–∞...\n      </div>\n    );\n  }\n\n  // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å—Ç—ã\n  return (\n    <div style={{ backgroundColor: 'white' }}>\n      <div className=\"posts-grid\">\n        {posts.map(post => (\n          <InstagramPost key={post.id} post={post} />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n\n// import React, { useState, useEffect } from 'react';\n// import InstagramPost from './components/InstagramPost';\n// import notionService from './services/notionService';\n// import './App.css';\n\n// function App() {\n//   const [posts, setPosts] = useState([]);\n//   const [loading, setLoading] = useState(true);\n    \n//   useEffect(() => {\n//     const loadPosts = async () => {\n//       try {\n//         const data = await notionService.getInstagramContent();\n//         setPosts(data);\n//       } catch (error) {\n//         console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);\n//       } finally {\n//         setLoading(false);\n//       }\n//     };\n\n//     loadPosts(); // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –∑–∞–≥—Ä—É–∑–∫–∏\n//   }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π\n\n//   return (\n//     <div style={{ backgroundColor: 'white' }}>\n//       <div className=\"posts-grid\">\n//         {posts.map(post => (\n//           <InstagramPost key={post.id} post={post} />\n//         ))}\n//       </div>\n//     </div>\n//   );\n// }\n\n// export default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}