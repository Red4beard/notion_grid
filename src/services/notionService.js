// –ü–æ–ª—É—á–∞–µ–º API –∫–ª—é—á –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
const API_KEY = process.env.REACT_APP_NOTION_API_KEY;

class NotionService {
  constructor() {
    // –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø–æ–ª–Ω—ã–π URL –¥–ª—è API Notion
    this.baseUrl = 'https://api.notion.com/v1';
    
    // –ë–µ—Ä–µ–º ID –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
    this.databaseId = process.env.REACT_APP_NOTION_DATABASE_ID || '16f937ca10d4809591f2d320ddf01689';
    
    // –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
    this.headers = {
      'Authorization': `Bearer ${API_KEY}`,
      'Content-Type': 'application/json',
      'Notion-Version': '2022-06-28',
      // –î–æ–±–∞–≤–ª—è–µ–º CORS –∑–∞–≥–æ–ª–æ–≤–∫–∏
      'Access-Control-Allow-Origin': '*'
    };
  }

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API
  async testConnection() {
    try {
      console.log('üîç –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API...');
      
      const response = await fetch(`${this.baseUrl}/users/me`, {
        method: 'GET',
        headers: this.headers
      });
      
      if (!response.ok) {
        const errorText = await response.text();
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è:', {
          status: response.status,
          statusText: response.statusText,
          details: errorText
        });
        throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);
      }
      
      const data = await response.json();
      console.log('‚úÖ –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:', data);
      return data;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ API:', error.message);
      throw error;
    }
  }

  // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–∞–Ω–∏—Ü—ã
  formatPageData(page) {
    console.log('üìÑ –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', page.id);
    
    return {
      id: page.id,
      title: page.properties.Title?.title?.[0]?.text?.content || '–ë–µ–∑ –Ω–∞–∑–≤–∞–Ω–∏—è',
      imageUrl: page.properties.Image?.files?.[0]?.file?.url || 
                page.properties.Image?.files?.[0]?.external?.url || '',
      type: page.properties.Type?.select?.name || 'post',
      postedDate: page.properties['Posted Date']?.date?.start || ''
    };
  }

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã
  async getInstagramContent() {
    try {
      console.log('üì• –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã...');
      
      const response = await fetch(`${this.baseUrl}/databases/${this.databaseId}/query`, {
        method: 'POST',
        headers: this.headers,
        // –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Å—Ç–æ–π body –¥–ª—è POST –∑–∞–ø—Ä–æ—Å–∞
        body: JSON.stringify({})
      });

      if (!response.ok) {
        const errorText = await response.text();
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö:', {
          status: response.status,
          text: errorText
        });
        throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: ${response.status}`);
      }

      const data = await response.json();
      console.log('‚úÖ –ü–æ–ª—É—á–µ–Ω—ã —Å—ã—Ä—ã–µ –¥–∞–Ω–Ω—ã–µ:', data);

      const formattedData = data.results.map(page => this.formatPageData(page));
      console.log('‚ú® –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', formattedData);
      
      return formattedData;
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      throw error;
    }
  }
}

// –°–æ–∑–¥–∞—ë–º –∏ —ç–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
const notionServiceInstance = new NotionService();
export default notionServiceInstance;








// const API_KEY = process.env.REACT_APP_NOTION_API_KEY;

// class NotionService {
//   constructor() {
//     // –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π ID –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
//     // this.databaseId = '16ed2176-428d-805c-909c-ddb1c7332a29';
//     this.databaseId = process.env.REACT_APP_NOTION_DATABASE_ID || '16f937ca10d4809591f2d320ddf01689';
//     this.baseUrl = `/v1`;
//     this.headers = {
//       'Authorization': `Bearer ${API_KEY}`,
//       'Content-Type': 'application/json',
//       'Notion-Version': '2022-06-28'
//     };
//   }

//   // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
//   async testConnection() {
//     try {
//       console.log('–û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å...');
      
//       const response = await fetch(`${this.baseUrl}/users/me`, {
//         method: 'GET',
//         headers: this.headers
//       });
      
//       if (!response.ok) {
//         const errorText = await response.text();
//         console.error('–î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', {
//           status: response.status,
//           statusText: response.statusText,
//           body: errorText
//         });
//         throw new Error(`HTTP error! status: ${response.status}`);
//       }
      
//       const data = await response.json();
//       // –£–±–∏—Ä–∞–µ–º –ø–æ–ø—ã—Ç–∫—É –¥–æ—Å—Ç—É–ø–∞ –∫ results[0]
//       console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API —É—Å–ø–µ—à–Ω–æ:', data);
//       return data;
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API:', error.message);
//       throw error;
//     }
//   }
//   formatPageData(page) {
//     console.log('–î–∞–Ω–Ω—ã–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', page);
//     return {
//       id: page.id,
//       title: page.properties.Title?.title?.[0]?.text?.content || '',
//       // –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª–µ –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
//       imageUrl: page.properties.Image?.files?.[0]?.file?.url || '',
//       type: page.properties.Type?.select?.name || '',
//       postedDate: page.properties['Posted Date']?.date?.start || ''
//     };
//   }
//   // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã
//   async getInstagramContent() {
//     try {
//       const response = await fetch(`${this.baseUrl}/databases/${this.databaseId}/query`, {
//         method: 'POST',
//         headers: this.headers
//       });
  
//       if (!response.ok) {
//         throw new Error(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö: ${response.status}`);
//       }
  
//       const data = await response.json();
//       // –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –∫–∞–∂–¥—É—é –∑–∞–ø–∏—Å—å
//       const formattedData = data.results.map(page => this.formatPageData(page));
//       console.log('–û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ:', formattedData);
//       return formattedData;
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
//       throw error;
//     }
  
//   }
// }

// // –°–æ–∑–¥–∞—ë–º –æ–¥–∏–Ω —ç–∫–∑–µ–º–ø–ª—è—Ä —Å–µ—Ä–≤–∏—Å–∞
// const notionServiceInstance = new NotionService();

// // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Å–æ–∑–¥–∞–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä
// export default notionServiceInstance;

// const API_KEY = process.env.REACT_APP_NOTION_API_KEY;

// class NotionService {
//   constructor() {
//     const devProxy = 'https://cors-anywhere.herokuapp.com/';
//     this.baseUrl = `${devProxy}https://api.notion.com/v1`;
//     this.databaseId = '16ed2176-428d-805c-909c-ddb1c7332a29';
    
//     this.headers = {
//       'Authorization': `Bearer ${API_KEY}`,
//       'Content-Type': 'application/json',
//       'Notion-Version': '2022-06-28',
//       'Accept': 'application/json'
//     };
//   }

//   async testConnection() {
//     try {
//       const response = await fetch(`${this.baseUrl}/users/me`, {
//         method: 'GET',
//         headers: this.headers
//       });
      
//       if (!response.ok) {
//         const errorText = await response.text();
//         throw new Error(`HTTP error! status: ${response.status}`);
//       }
      
//       const data = await response.json();
//       console.log('–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ API —É—Å–ø–µ—à–Ω–æ:', data);
//       return data;
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ API:', error);
//       throw error;
//     }
//   }

//   // –î–æ–±–∞–≤–ª—è–µ–º —ç—Ç–æ—Ç –º–µ—Ç–æ–¥ —Å—é–¥–∞ üëá
//   async getInstagramContent() {
//     try {
//       const response = await fetch(`${this.baseUrl}/databases/${this.databaseId}/query`, {
//         method: 'POST',
//         headers: this.headers
//       });

//       if (!response.ok) {
//         throw new Error(`HTTP error! status: ${response.status}`);
//       }

//       const data = await response.json();
//       return data.results ? data.results : [];
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
//       return [];
//     }
//   }

//   async createEmbedBlock(pageId) {
//     try {
//       const response = await fetch(`${this.baseUrl}/blocks/${pageId}/children`, {
//         method: 'PATCH',
//         headers: this.headers,
//         body: JSON.stringify({
//           children: [
//             {
//               object: 'block',
//               type: 'embed',
//               embed: {
//                 url: 'URL_–í–ê–®–ï–ì–û_–ü–†–ò–õ–û–ñ–ï–ù–ò–Ø',
//               }
//             }
//           ]
//         })
//       });

//       if (!response.ok) {
//         throw new Error(`HTTP error! status: ${response.status}`);
//       }

//       return await response.json();
//     } catch (error) {
//       console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ embed –±–ª–æ–∫–∞:', error);
//       throw error;
//     }
//   }
// }

// const notionServiceInstance = new NotionService();
// export default notionServiceInstance;